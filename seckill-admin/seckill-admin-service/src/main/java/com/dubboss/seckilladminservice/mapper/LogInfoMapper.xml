<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dubboss.seckilladminservice.mapper.LogInfoMapper">
    <!--<cache type="redis" />-->

    <resultMap id="BaseResultMap" type="entity.LogInfo">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="nickname" jdbcType="VARCHAR" property="nickname"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="state" jdbcType="TINYINT" property="state"/>
        <result column="admin" property="admin"/>
        <result column="usertype" property="userType"/>
        <result column="salt" property="salt"/>
        <result column="usertype" property="userType"/>
        <result column="registerDate" property="registerDate"/>
        <result column="lastLoginDate" property="lastLoginDate"/>

    </resultMap>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from
		sk_user
		where id = #{id,jdbcType=BIGINT}
	</delete>

    <insert id="insert" keyProperty="id" parameterType="entity.LogInfo" useGeneratedKeys="true">
		insert into sk_user (nickname,password, state,usertype,admin,salt,registerdate,lastlogindate)
		values	(#{nickname,jdbcType=VARCHAR},#{password,jdbcType=VARCHAR},#{state,jdbcType=TINYINT},#{userType},#{admin}
		,#{salt},#{registerDate},#{lastLoginDate})
	</insert>

    <update id="updateByPrimaryKey" parameterType="entity.LogInfo">
		update sk_user set nickname = #{nickname,jdbcType=VARCHAR},password =#{password,jdbcType=VARCHAR},
			state = #{state,jdbcType=TINYINT},usertype = #{userType},admin=#{admin},salt = #{salt},
			registerdate = #{registerDate},lastlogindate = #{lastLoginDate}
		where id = #{id,jdbcType=BIGINT}
	</update>

    <sql id="base_column">
		id, nickname, password, state,usertype,admin ,salt , registerdate , lastlogindate
	</sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap" useCache="true">
        select
        <include refid="base_column"/>
        from sk_user where id = #{id,jdbcType=BIGINT}
    </select>

    <select id="selectAll" resultMap="BaseResultMap" useCache="false">
        select
        <include refid="base_column"/>
        from sk_user
    </select>

    <select id="getCountByNickname" resultType="int" useCache="false">
		select count(id) from sk_user where nickname=#{nickname} and usertype = #{userType}
	</select>


    <select id="getLoginInfoByNickname" resultMap="BaseResultMap" useCache="false">
        select
        <include refid="base_column"/>
        from sk_user where nickname=#{nickname} and usertype = #{userType}
    </select>


    <select id="login" resultMap="BaseResultMap" useCache="true">
        select
        <include refid="base_column"/>
        from sk_user where nickname= #{name} and password=#{password} and usertype=#{userType}
    </select>

    <select id="autoComplate" resultType="hashmap" useCache="false">
		select id,nickname as name
		from sk_user where nickname LIKE concat(#{word},'%') AND usertype = #{userType}
	</select>
</mapper>